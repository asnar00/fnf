// ᕦ(ツ)ᕤ
// generated by fnf.py

// ----------------------------------------------------------------
// logging functions

var _file = "";
function _output(value: any, loc: string) { console.log(`${loc}:OUTPUT: ${value}`); }
function _assert(lhs: any, rhs: any, loc: string) { if (lhs !== rhs) console.log(`${loc}:FAIL: ${lhs}`); else console.log(`${loc}:PASS`); }

// ----------------------------------------------------------------
// context

namespace mycontext {
    class Colour {
        red: number =  0;
        green: number =  0;
        blue: number =  0;
        constructor(red: number =  0, green: number =  0, blue: number =  0) {
            this.red = red;
            this.green = green;
            this.blue = blue;
        }
    }
    var my_colour : Colour =  new Colour(1, 2, 3);
    export function hello(name: string) : number {
        var _result: number;
        _result = (() => {
            output(`hello, ${name}!`);
            return 42;
        })();
        _result = (() => {
            goodbye();
            return _result + 1;
        })();
        return _result;
    }
    export function output(msg: string, indent: number = 0) {
        (() => {
            console.log(" ".repeat(indent) + msg);
        })();
    }
    export function goodbye() {
        (() => {
            output("kthxbai");
        })();
    }
    export function _test() {
        const _Hello_test = () => {
            _assert(hello("world"), 42, "source/fnf/Hello.fnf.ts.md:48:2");
            let x: number = 1;
            _assert(my_colour.red, x, "source/fnf/Hello.fnf.ts.md:55:2");
        };
        const _Goodbye_test = () => {
        };
        try { _Hello_test(); } catch (e) { console.error(e); }
        try { _Goodbye_test(); } catch (e) { console.error(e); }
    }
}

// ----------------------------------------------------------------
// entry point

function main() {
    if (Deno.args.indexOf("-test") >= 0) {
        console.log("testing mycontext...");
        mycontext._test();
        return;
    }
}

main();
